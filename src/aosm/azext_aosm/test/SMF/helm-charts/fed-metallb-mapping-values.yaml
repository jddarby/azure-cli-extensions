global:

  # If running on OCP cluster, please set "enableSCC" to "true"
  enableSCC: false
  
  registry:
    docker:
      repoPath:       "a4oprodaf.a4opacketcore.microsoft.com/rel_build_docker"

pod-metallb:
  rbacEnabled: true

  nameOverride: ""
  fullnameOverride: ""
  loadBalancerClass: ""

  # IPs are allocated via IPAddressPools which MetalLB uses to assign IPs to services
  ipAddressPools:
    - name: default-pool
      poolLabels: {}
      # List of addresses
      addressesList: []
      # - 192.168.11.0/24
      # - 192.168.12.1-192.168.12.5
      # - fc00:f853:0ccd:e799::/124      

  # Layer 2 mode works with speakers responding to ARP requests on your local network directly, to give the machine's MAC address to clients
  # layer2:
  #  advertisements:
  #     - name: default-layer2-advertisement
  #       # ipAddressPools: []
  #       # ipAddressPoolSelectors: []
  #       # nodeSelectors: []

  # MetalLB v.0.13.4 limitations/notes:
  # - It is not allowed to have different peers sharing the same ip address but different ports
  # - It is not allowed to have different routerID or different myAsn for different peers. 
  # - It is allowed to override the routerID and/or myAsn, but the value must be the same for all the peers
  # - Setting no IPAddressPools in BGPAdvertisement means advertisement is for all address pools available
  bgp:
    advertisements:
      - name: default-bgp-advertisement
        communitites:
          - NO_ADVERTISE      
        # aggregationLength:
        # aggregationLengthV6:
        # localPref:        
        # ipAddressPools: []
        # ipAddressPoolSelectors: []
        # nodeSelectors: []
        # peers: []
    bfd:
      enabled: false
      # profiles:
      #   - name: default-profile
          # receiveInterval:
          # transmitInterval:
          # detectMultiplier:
          # echoInterval:
          # echoMode:
          # passiveMode:
          # minimumTtl:
    peers:
      - name: leaf-1
        myASN: ""
        peerASN: ""
        peerAddress: ""
        # sourceAddress:
        # peerPort:
        # holdTime:
        # keepaliveTime:
        # routerID:
        # nodeSelectors: []
        # password:
        # passwordSecret:
        # bfdProfile: default-profile
        # ebgpMultiHop: false
      # - name: leaf-2
      #   myASN: "64500"
      #   peerASN: "64502"
      #   peerAddress: 10.0.0.2
      #   sourceAddress:
      #   peerPort:
      #   holdTime:
      #   keepaliveTime:
      #   routerID:
      #   nodeSelectors: []
      #   password:
      #   passwordSecret:
      #   bfdProfile:
      #   ebgpMultiHop: false
    communities:
      name: my-communities
      aliases:
        - name: NO_ADVERTISE
          value: 65535:65282
      #   - name: vpn-only
      #     value: 1234:1      

  prometheus:
    # scrape annotations specifies whether to add Prometheus metric
    # auto-collection annotations to pods. See
    # https://github.com/prometheus/prometheus/blob/release-2.1/documentation/examples/prometheus-kubernetes.yml
    # for a corresponding Prometheus configuration. Alternatively, you
    # may want to use the Prometheus Operator
    # (https://github.com/coreos/prometheus-operator) for more powerful
    # monitoring configuration. If you use the Prometheus operator, this
    # can be left at false.
    scrapeAnnotations: false

    # port both controller and speaker will listen on for metrics
    metricsPort: 7472

    # the service account used by prometheus
    # required when .Values.prometheus.podMonitor.enabled == true
    serviceAccount: ""

    # the namespace where prometheus is deployed
    # required when .Values.prometheus.podMonitor.enabled == true
    namespace: ""

    # Prometheus Operator PodMonitors
    podMonitor:

      # enable support for Prometheus Operator
      enabled: false

      # optional additionnal labels for podMonitors
      additionalLabels: {}

      # optional annotations for podMonitors
      annotations: {}

      # Job label for scrape target
      jobLabel: "app.kubernetes.io/name"

      # Scrape interval. If not set, the Prometheus default scrape interval is used.
      interval: 1

      # 	metric relabel configs to apply to samples before ingestion.
      metricRelabelings: []
      # - action: keep
      #   regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'
      #   sourceLabels: [__name__]

      # 	relabel configs to apply to samples before ingestion.
      relabelings: []
      # - sourceLabels: [__meta_kubernetes_pod_node_name]
      #   separator: ;
      #   regex: ^(.*)$
      #   target_label: nodename
      #   replacement: $1
      #   action: replace

    # Prometheus Operator alertmanager alerts
    prometheusRule:

      # enable alertmanager alerts
      enabled: false

      # optional additionnal labels for prometheusRules
      additionalLabels: {}

      # optional annotations for prometheusRules
      annotations: {}

      # MetalLBStaleConfig
      staleConfig:
        enabled: true
        labels:
          severity: warning

      # MetalLBConfigNotLoaded
      configNotLoaded:
        enabled: true
        labels:
          severity: warning

      # MetalLBAddressPoolExhausted
      addressPoolExhausted:
        enabled: true
        labels:
          severity: alert

      addressPoolUsage:
        enabled: true
        thresholds:
          - percent: 75
            labels:
              severity: warning
          - percent: 85
            labels:
              severity: warning
          - percent: 95
            labels:
              severity: alert

      # MetalLBBGPSessionDown
      bgpSessionDown:
        enabled: true
        labels:
          severity: alert

      extraAlerts: []

  # controller contains configuration specific to the MetalLB cluster
  # controller.
  controller:
    enabled: true
    # -- Controller log level. Must be one of: `all`, `debug`, `info`, `warn`, `error` or `none`
    logLevel: info
    image:
      pullPolicy: IfNotPresent
    serviceAccount:
      # Specifies whether a ServiceAccount should be created
      create: true
      # The name of the ServiceAccount to use. If not set and create is
      # true, a name is generated using the fullname template
      name: ""
      annotations: {}
    securityContext:
      runAsNonRoot: true
      # nobody
      runAsUser: 65534
      fsGroup: 65534
    resources: {}
      # limits:
        # cpu: 100m
        # memory: 100Mi
    nodeSelector: {}
    tolerations: []
    priorityClassName: ""
    runtimeClassName: ""
    affinity: {}
    podAnnotations: {}
    livenessProbe:
      enabled: true
      failureThreshold: 3
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    readinessProbe:
      enabled: true
      failureThreshold: 3
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1

  # speaker contains configuration specific to the MetalLB speaker
  # daemonset.
  speaker:
    disabled: false
    # -- Speaker log level. Must be one of: `all`, `debug`, `info`, `warn`, `error` or `none`
    logLevel: info
    tolerateMaster: false
    memberlist:
      enabled: false
      mlBindPort: 7946
    image:
      pullPolicy: IfNotPresent
    serviceAccount:
      # Specifies whether a ServiceAccount should be created
      create: true
      # The name of the ServiceAccount to use. If not set and create is
      # true, a name is generated using the fullname template
      name: ""
      annotations: {}
    ## Defines a secret name for the controller to generate a memberlist encryption secret
    ## By default secretName: {{ "metallb.fullname" }}-memberlist
    ##
    # secretName:
    resources:
      limits:
        cpu: 100m
        memory: 100Mi
    nodeSelector: {}
    tolerations: []
    priorityClassName: ""
    affinity: {}
    ## Selects which runtime class will be used by the pod.
    runtimeClassName: ""
    podAnnotations: {}
    livenessProbe:
      enabled: true
      failureThreshold: 3
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    readinessProbe:
      enabled: true
      failureThreshold: 3
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    # frr contains configuration specific to the MetalLB FRR container,
    # for speaker running alongside FRR.
    # Note: FRR requires running the speaker pod privileged. With FRR, new MetalLB features are supported like IPV6 and BFD.
    frr:
      enabled: false
      image:
        # Note: The FRR image is non-redistributable. Configure repoPath with the FRR image repo in use
        # repoPath: "frrouting" # public repo
        # repoPath: "cnartifactory.affirmed.local:8081/thirdparty_docker/frrouting" # internal repo
        repoPath: ""
        name: "frr:v7.5.1"      
        pullPolicy: IfNotPresent
      metricsPort: 7473

