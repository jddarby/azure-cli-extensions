global:
  registry:
    docker:
      repoPath: "a4oprodaf.a4opacketcore.microsoft.com/rel_build_docker"

pod-descheduler:
  
  enabled: true
  logVerbosity: "3"
  nodeSelector: []
  evictFailedBarePods: true
  evictLocalStoragePods: true
  evictSystemCriticalPods: false
  maxNoOfPodsToEvictPerNode: 100

  policy:
    #configure descheduler policies from here 
    removeDuplicates:
      enabled: true
      namespacesIncluded: 
      - "fed-db-mongo-ram"
      - "fed-db-etcd"
      - "fed-service-reg"
      nodefit: true
      thresholdPriorityClassName: ""

    #STRATEGY_2
    removePodsViolatingInterPodAntiAffinity:
      enabled: true
      namespacesIncluded: 
      - "fed-db-mongo-ram"
      - "fed-db-etcd"
      - "fed-service-reg"
      nodefit: true
      thresholdPriorityClassName: ""

    #STRATEGY_3
    removePodsViolatingNodeAffinity:
      enabled: true
      nodeAffinityType: 
      - "requiredDuringSchedulingIgnoredDuringExecution"
      namespacesIncluded: 
      - "fed-db-mongo-ram"
      - "fed-db-etcd"
      - "fed-service-reg"
      - "vnfmgr"
      nodefit: true
      thresholdPriorityClassName: ""

    #STRATEGY_4
    removePodsViolatingTopologySpreadConstraint:
      enabled: true
      includeSoftConstraints: true
      namespacesIncluded: 
      - "fed-db-mongo-ram"
      - "fed-db-etcd"
      - "fed-service-reg"
      - "vnfmgr"      
      - "fed-timer"
      nodefit: true
      thresholdPriorityClassName: ""

    #STRATEGY_5
    removePodsHavingTooManyRestarts:
      enabled: true
      includingInitContainers: false
      podRestartThreshold: 20
      namespacesIncluded: 
      - "fed-db-mongo-ram"
      - "fed-db-etcd"
      - "fed-service-reg"
      - "vnfmgr"      
      nodefit: true
      thresholdPriorityClassName: ""

pod-conntrack_clean:
  enabled: true
  udpCleaningEnabled: true
  tcpCleaningEnabled: false

pod-node_config:
  # read and apply the commissioning config maps. E.g. dpdkNodeConfigMap
  commissioning:
    enabled: false

  # To enable node-local-dns  
  nodeLocalDNS:
    enabled: false

  # To enable metrics server
  metricsServer:
    enabled: false

############################################################################## 
## dpdkNodeConfigMap: dpdk node commissioning configmap. Executed in daemonset
## in the order captured in the following variable
## ---------------------------------------------------------------------------
## Note: The commissioning daemon and dpdkNodeConfigMap below deploy only on
##   nodes assigned the "dataplane" role:
##   'kubectl label node node-name node-role.kubernetes.io/dataplane='
##   Role cna be remove with:
##   'kubectl label node node-name node-role.kubernetes.io/dataplane-'
##
## AKS specified command examples:
##
## - Install driver ctl (assuming Ubuntu 18.04) VM:
##         - conditional: "which driverctl"
##           cmd: "wget http://archive.ubuntu.com/ubuntu/pool/universe/d/driverctl/driverctl_0.111.orig.tar.gz && tar -xf driverctl_0.111.orig.tar.gz && cd driverctl-0.111 && cp driverctl /usr/bin"
##           isPermanent: "False"
##
## - Load the dpdk uio driver
##         - conditional: "lsmod | grep uio_hv_generic"
##           cmd: "modprobe -i uio_hv_generic"
##           isPermanent: "True"
##
## - Kubelet restart
##         - conditional: ""
##           cmd: "systemctl restart kubelet"
##           isPermanent: "False"
############################################################################## 
  dpdkNodeConfigMap:
    enabled: false
    config:
      - type: hugepages
        size: 2M
        nbPages: 2000
      - type: commands
        cmds:
          - conditional: "which driverctl"
            cmd: "echo 'No driverctl installed'"
            isPermanent: "False"
          - conditional: "lsmod | grep uio_hv_generic"
            cmd: "echo 'No uio_hv_generic loaded'"
            isPermanent: "False"
      - type: portsRename
        ports:
          - name: "eth1"
##############################################################################
## aodsNodeConfigWorker: worker node configmap. Executed in the daemonset in 
## the order captured in the below variable
## ---------------------------------------------------------------------------
## Note: The commissioning daemon and aodsNodeConfigWorker will be executed on
##  all worker nodes
##  Available configs:
##    - nodeStatusUpdateFrequency: updates the --node-status-update-frequency 
##      that the kubelet uses to update node conditions to API  format
##      eg: 
##      - type: nodeStatusUpdateFrequency
##        value: "5s"
##    - defaultLimitNOFILE :  udpdates the DefaultLimitNOFILE located in 
##      /etc/systemd/system.conf
##    - defaultTasksMax: updates the DefaultTasksMax in /etc/systemd/system.conf
##    - txqueuelen: updates the txqueuelen on the provided interface
##    - allowedUnsafeSysctls: updates the allowedUnsafeSysctls in the kubelet 
##      config
##      NOTE** flag --allowed-unsafe-sysctls is deprecated
##    - nodeLabel: label nodes with provided value
##      NOTE** only specific labels/prefixes are allowed to be set this way as of
##      Kubernetes v1.16.0, so label may or may not be applied to node
##    - cgroup - update cgroup version used on nodes, may choose values cgroup 
##      and cgroup2
##    - NOTE** only mariner vm supported
##    - reboot-delay: delay reboot of node by n seconds
##    - reboot-override: override reboot of node if a setting requires reboot. If
##      True, reboot will not be performed even if reboot is necesary for a config
##      update
##    - topologyManagerPolicy: update topologyManagerPolicy in kubelet config
##    - reservedSystemCpus: update reservedSystemCpus in kubelet config
##    - hugepages: update hugepages on the worker node, optional setting
##      example:
##          - type: hugepages
##            size: 2M
##            nbPages: 2000
##    - sysctls: update sysctl settings so that they persist in a reboot by updating
##      the /etc/sysctl.conf file. Below are the default settings to be updated.
##############################################################################
  aodsNodeConfigWorker:
    config:
      - type: nodeStatusUpdateFrequency
        value: "5s"
      - type: defaultLimitNOFILE
        value: "65535:524288"
      - type: defaultTasksMax
        value: 359414
      - type: txqueuelen
        value: 20000
        ethname: ens3
      - type: allowedUnsafeSysctls
        allowedUnsafeSysctls:
          - "net.core.somaxconn"
          - "net.ipv4.tcp_max_syn_backlog"
          - "net.ipv4.tcp_fin_timeout"
          - "net.ipv4.tcp_keepalive_intvl"
          - "net.ipv4.tcp_keepalive_time"
          - "net.ipv4.conf.all.route_localnet"
      - type: sysctls
        sysctls:
          - net.ipv4.ip_forward=1
          - net.ipv4.conf.all.rp_filter=1
          - net.ipv6.conf.all.forwarding=1
          - net.ipv4.ip_nonlocal_bind=1
          - net.netfilter.nf_conntrack_udp_timeout_stream=120
          - fs.inotify.max_user_instances=8192
          - fs.inotify.max_user_watches=1048576
          - net.core.wmem_max=52428800
          - net.core.rmem_max=52428800
          - net.core.rmem_default=52428800
          - net.core.wmem_default=52428800
          - net.core.dev_weight=512
          - net.core.netdev_budget=600
          - net.core.netdev_budget_usecs=8000
          - net.core.netdev_max_backlog=8192
          - net.ipv4.tcp_fin_timeout=30
          - net.ipv4.tcp_keepalive_intvl=30
          - net.ipv4.tcp_keepalive_time=120
          - net.core.somaxconn=4096
          - net.ipv4.tcp_max_syn_backlog=4096
      - type: nodeLabel
        value: node.kubernetes.io/nodetype=worker
      - type: cgroup
        value: cgroup
      - type: reboot-delay
        value: 10
      - type: reboot-override
        value: False
      - type: topologyManagerPolicy
        value: "single-numa-node"
      - type: reservedSystemCpus
        value: "0-2"
##############################################################################
## aodsNodeConfigMaster: master node configmap. Executed in the daemonset in 
## the order captured in the below variable
## ---------------------------------------------------------------------------
## Note: The commissioning daemon and aodsNodeConfigWorker will be executed on
##  all master nodes
##  Available configs:
##    - nodeStatusUpdateFrequency: updates the --node-status-update-frequency 
##      that the kubelet uses to update node conditions to API  format
##      eg: 
##      - type: nodeStatusUpdateFrequency
##        value: "5s"
##    - nodeMonitorGracePeriod: updates the --node-monitor-grace-period in the 
##      kube-controller-manager. Must be N times the nodeStatusUpdateFrequency
##      eg: 
##      - type: nodeMonitorGracePeriod
##        value: "20s"
##    - defaultNotReadyTolerationSeconds: updates the --default-not-ready-toleration-seconds
##      in kube-apiserver
##      eg: 
##      - type: defaultNotReadyTolerationSeconds
##        value: "170"
##    - defaultUnreachableTolerationSeconds: updates the --default-unreachable-toleration-seconds 
##      in kube-apiserver
##      eg: 
##      - type: defaultUnreachableTolerationSeconds
##        value: "170"
##    - defaultLimitNOFILE :  udpdates the DefaultLimitNOFILE located in 
##      /etc/systemd/system.conf
##    - defaultTasksMax: updates the DefaultTasksMax in /etc/systemd/system.conf
##    - txqueuelen: updates the txqueuelen on the provided interface
##    - allowedUnsafeSysctls: updates the allowedUnsafeSysctls in the kubelet 
##      config
##      NOTE** flag --allowed-unsafe-sysctls is deprecated
##    - nodeLabel: label nodes with provided value
##      NOTE** only specific labels/prefixes are allowed to be set this way as of
##      Kubernetes v1.16.0, so label may or may not be applied to node
##    - cgroup - update cgroup version used on nodes, may choose values cgroup 
##      and cgroup2
##    - NOTE** only mariner vm supported
##    - reboot-delay: delay reboot of node by n seconds
##    - reboot-override: override reboot of node if a setting requires reboot. If
##      True, reboot will not be performed even if reboot is necesary for a config
##      update
##    - topologyManagerPolicy: update topologyManagerPolicy in kubelet config
##    - reservedSystemCpus: update reservedSystemCpus in kubelet config
##    - hugepages: update hugepages on the worker node, optional setting
##      example:
##          - type: hugepages
##            size: 2M
##            nbPages: 2000
##    - sysctls: update sysctl settings so that they persist in a reboot by updating
##      the /etc/sysctl.conf file. Below are the default settings to be updated.
##############################################################################
  aodsNodeConfigMaster:
    config:
      - type: nodeStatusUpdateFrequency
        value: "5s"
      - type: nodeMonitorGracePeriod
        value: "20s"
      - type: defaultNotReadyTolerationSeconds
        value: "170"
      - type: defaultUnreachableTolerationSeconds
        value: "170"
      - type: defaultLimitNOFILE
        value: "65535:524288"
      - type: defaultTasksMax
        value: 101382
      - type: txqueuelen
        value: 20000
        ethname: ens3
      - type: allowedUnsafeSysctls
        allowedUnsafeSysctls:
          - "net.core.somaxconn"
          - "net.ipv4.tcp_max_syn_backlog"
          - "net.ipv4.tcp_fin_timeout"
          - "net.ipv4.tcp_keepalive_intvl"
          - "net.ipv4.tcp_keepalive_time"
          - "net.ipv4.conf.all.route_localnet"
      - type: sysctls
        sysctls:
          - net.ipv4.ip_forward=1
          - net.ipv4.conf.all.rp_filter=1
          - net.ipv6.conf.all.forwarding=1
          - net.ipv4.ip_nonlocal_bind=1
          - net.netfilter.nf_conntrack_udp_timeout_stream=120
          - fs.inotify.max_user_instances=8192
          - fs.inotify.max_user_watches=1048576
          - net.core.wmem_max=52428800
          - net.core.rmem_max=52428800
          - net.core.rmem_default=52428800
          - net.core.wmem_default=52428800
          - net.core.dev_weight=512
          - net.core.netdev_budget=600
          - net.core.netdev_budget_usecs=8000
          - net.core.netdev_max_backlog=8192
          - net.ipv4.tcp_fin_timeout=30
          - net.ipv4.tcp_keepalive_intvl=30
          - net.ipv4.tcp_keepalive_time=120
          - net.core.somaxconn=4096
          - net.ipv4.tcp_max_syn_backlog=4096
      - type: nodeLabel
        value: node.kubernetes.io/nodetype=master
      - type: cgroup
        value: cgroup
      - type: reboot-delay
        value: 10
      - type: reboot-override
        value: False
      - type: topologyManagerPolicy
        value: "single-numa-node"
      - type: reservedSystemCpus
        value: "0-2"
  # clusterRole configuration is used to configure the clusterrole in clusterrolebinding.
  rbacEnabled: true
  clusterRole: "permissive-full-cr"
  # serviceAccountName configuration is used to create serviceaccount per pod.
  serviceAccountName: "node-config-serviceaccount"
