global:

  #dafault rbac clusterrole and serviceaccount configuration
  defaultRbacEnabled: true
  defaultClusterRole: permissive-network-cr
  defaultServiceAccountName: fed-elastalert-serviceaccount

  podPriorityEnabled: true

  adminPassword: ""

  vault:
    enabled: false
    hashicorpVault:
      enabled: true
    azureKeyVault:
      enabled: false
  # PaaS Service Mesh Selector
  mesh:
    istio:
      egressGwFQDN: "elastalert.com"

      egressGwTLS:
        enabled: false
        # Set the tls and mtls mode
          # SIMPLE --> to enable only TLS
          # MUTUAL --> to enable mTLS (default)
        mode: MUTUAL
        certManager: 
          enabled: false
          certDuration: 10h
          renewBefore: 1h
          organization: affirmednetworks
          issuerName: affirmed-clusterissuer
        userProvided: 
          enabled: true
          cacert: |-
          tlscrt: |-
          tlskey: |- 

      # sharing key is for having single loadbalancer IP shared among multiple paas components.      
      loadBalancerSharingKey: ""
  
  # Fluentd Configurations
  logging:
    enabled: false
    fluentd:
      buffer:
        bufferLimit: 512m  # Total buffer size. Maximum amount of buffer space each fluentd thread would use to keep logs. After this is exhaused, fluentd would start deleting oldest logs to make room for new logs.
        retryWait: 180s    # Interval(seconds) at which the buffer flush is retried in case of failure.
        maxRetries: 10     # Max number of retries to flush a buffer chunk. After this is exhausted, fluentd would delete the chunk.
    elastic:
      IP: ""
      Port: 9200
    enableAddlTargets: false
    addlTargets:
    - forward:
        name: fluentd
        host: ""
        port: 24224


  # PaaS Registry Selector
  registry:
    docker:
      repoPath: "a4oprodaf.a4opacketcore.microsoft.com/rel_build_docker"

  # PaaS Fileserver Selector
  fileserver:
    nfs:
      remoteHost: ""
      remotePath: "/filestore"
      remotePort: "85"

  # Environment variables
  envVars:
    fedType:        "paas"
    fedUniqueName:  "elastalert-default"

  #specify the IP ranges that are allowed to access the load balancer
  loadBalancerSourceRanges: ""

  # node affinity deployment
  deployment:
    nodeDataplaneAffinity: "false"

  overrides:
    postInstallEnabled: false
    preDeleteEnabled:   false

pod-elastalert:
  # rbacEnabled, serviceAccountName configuration for pod-elastalert: These configuration is used to create the rolebinding and serviceaccount.
  # Configuring rbacEnabled to true will create role and rolebinding. Configuring rbacEnabled to false, role and rolebinding will not be created.
  rbacEnabled: true
  # serviceAccountName configuration is used to create serviceaccount per pod.
  serviceAccountName: "elastalert-serviceaccount"

  readinessProbe:
    failureThreshold: 10
    initialDelaySeconds: 60
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 30

  livenessProbe:
    failureThreshold: 10
    initialDelaySeconds: 60
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 30


  elastalertExtIP: 1.1.1.1
 # to enable  debug mode 
  debug: false

  #paasSelelctorElasticsearchName, Ip address were elasticsearch is running
  paasSelectorElasticsearchName: ""
  
  #paasSelelctorElasticsearchRestPort, is the port on which elastic search is running
  paasSelectorElasticsearchRestPort: "9200"

  security:
    credPath: "vault/secrets"
  
  # When egress gateway is enabled, we must add the receiver IP and port to which we must securely send the alert payload.
  # Also please ensure the certificates are signed by the same CA and cacert, tlscert and tlskey have been configured.
  # once that is done, add the reciever server IP and port as a list item.
  #receivers:
  #- server: 10.163.207.161
  #  port: 443
  receivers: 
  - server: ""
    port: 443

  # Service type of elastalert will be LoadBalancer when loadBalancer.enabled=true, otherwise service type=ClusterIP
  # metallb will automatically assign EXTERNAL-IP for service type=LoadBalancer.
  service:
    loadBalancer:
      enabled: true
      loadBalancerIP: ""
      loadBalancerFQDN: ""
      # IP reuse feature of metallb
      loadBalancerSharingKey: "paas"
      serviceAnnotations:
        service.beta.kubernetes.io/azure-load-balancer-internal: "true"
        service.beta.kubernetes.io/azure-load-balancer-internal-subnet: "none"

  storage:
    # storage type can be nfs, remote or rook
    type: nfs
    #if storage.type is set as rook, Configure storage.storageClassName field with the storage class name of type filesstem that gets deployed with fed-rook-ceph.
    # default value is "rook-cephfs".
    storageClassName: elastalert-local
    # alertStorageSize is storage limit 
    alertStorageSize: "1Gi"
    #configure provisioner, reclaimPolicy, volumeBindingMode and parameters only when storage.type is remote.
    provisioner: kubernetes.io/azure-file
    reclaimPolicy: Delete
    parameters:
      customParameters:
        skuName: ""
        location: ""
        storageAccount: ""

  # runEverySeconds run elastalert every 60/X seconds
  runEverySeconds: "60"

# Istio Gw Microservice
pod-istio_gw:
  enabled: true

  # Enable/Disable RBAC
  # if RBAC is disabled then serviceAccountName needs to be provided.
  rbacEnabled: true

  istioNspace:    "fed-istio"
  
  ingressGateway:
    enabled: false
    ingressGatewayServiceAccountName: istio-ingressgateway-service-account
  egressGateway:
    enabled: true
    egressGatewayServiceAccountName: istio-egressgateway-service-account
