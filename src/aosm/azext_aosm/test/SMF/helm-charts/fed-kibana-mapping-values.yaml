global:
  
  #dafault rbac clusterrole and serviceaccount configuration
  defaultRbacEnabled: true
  defaultClusterRole: permissive-network-cr
  defaultServiceAccountName: fed-kibana-serviceaccount

  # NetworkPolicy Configuration
  ingressNetworkPolicy:
    # enabled: true -> enables networkpolicy in federation, false -> disables networkpolicy in federation
    enabled: true
    # Namespaces which are required to be allowed for ingress traffic
    ingressTrafficNamespaces:
    - fed-service-reg
    - fed-db-etcd
    - fed-paas-helpers
    - fed-istio
    - fed-prometheus

  podPriorityEnabled: true  

  #Generic password for all PAAS components
  adminPassword: ""

  # Fluentd Configurations
  logging:
    enabled: false
    fluentd:
      buffer:
        bufferLimit: 512m  # Total buffer size. Maximum amount of buffer space each fluentd thread would use to keep logs. After this is exhaused, fluentd would start deleting oldest logs to make room for new logs.
        retryWait: 180s    # Interval(seconds) at which the buffer flush is retried in case of failure.
        maxRetries: 10     # Max number of retries to flush a buffer chunk. After this is exhausted, fluentd would delete the chunk. 
    elastic:
      IP: ""
      Port: 9200
    enableAddlTargets: false
    addlTargets:
    - forward:
        name: fluentd
        host: ""
        port: 24224

  grafana:
    enabled: true
    # If Grafana is enabled, please add a valid Grafana server URL as per the following guidelines.
    # If Grafana is deployed WITHOUT TLS: "http://[grafana-ip]:[grafana-port]" OR "http://[paas-lb-ip]:[grafana-port]" (by-default grafana-port is 3000)
    # If Grafana is deployed WITH TLS: "https://[grafana-ip]:[grafana-port]" OR "https://[paas-lb-ip]:[grafana-port]" (by-default grafana-port is 3000)
    url: ""
    prometheusinfo:
      url: "http://prometheus.fed-prometheus:9090"

  # PaaS Monitoring Selector
  monitoring:
    prometheus:
      enabled: true

  # Prometheus metrics scrape intrval. Default value set to 1m.
  metricsScrapeInterval: 1m

  # PaaS Registry Selector 
  registry:
    docker:
      repoPath: "a4oprodaf.a4opacketcore.microsoft.com/rel_build_docker"

  # Environment variables
  envVars:
    fedType:        "paas"
    fedUniqueName:  "kibana-default"

  vault:
    enabled: false
    hashicorpVault:
      enabled: true
      service: "http://fed-vault-svc-internal.fed-vault:8200"
    azureKeyVault:
      enabled: false

  # PaaS Service Mesh Selector
  mesh:
    istio:
      # set this value only if load balancer sharing key is configured
      ingressGwIP: ""
      ingressGwFQDN: "kibana.com"
      # If specified this port will be used irresepective of TLS mode
      # If not specified, port 80 will be used if TLS is enabled, else port 443 will be used
      ingressGwPort: 5601
      # This controls use of TLS in GWs
      ingressGwTLS:
          enabled: true
          # Set the tls mode
            # SIMPLE --> to enable only TLS
            # MUTUAL --> to enable mTLS (default)
          mode: SIMPLE
          certManager:
            enabled: true
            certDuration: 10h
            renewBefore: 1h
            organization: affirmednetworks
            issuerName: affirmed-clusterissuer
          userProvided:
            enabled: false
            #Please refer to userguide documentation
            cacert: |-

            tlscrt: |-

            tlskey: |- 

      loadBalancerSharingKey: "paas"
      serviceAnnotations:
        service.beta.kubernetes.io/azure-load-balancer-internal: "true"
        service.beta.kubernetes.io/azure-load-balancer-internal-subnet: "none"

  # you can specify the IP ranges that are allowed to access the load balancer 
  loadBalancerSourceRanges: ""

  overrides:
    preDeleteEnabled:   true
    postInstallEnabled: false
    preUpgradeEnabled:  true
    preRollbackEnabled: true

pod-istio_gw:
  egressGateway:
    enabled: false

pod-kibana:
  # Kibana port is from where kibana is accessible 
  kibanaPort: 5601
  #elasticExtIP is external ip address of remote/local elastic search 
  elasticExtIP: ""
  #elasticExtPort is port number of remote/local elastic search 
  elasticExtPort: 9200

  readinessProbe:
    failureThreshold: 10
    initialDelaySeconds: 120
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 10

  livenessProbe:
    failureThreshold: 10
    initialDelaySeconds: 120
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 10
  
 #Change the version variable for every  upgrade and it must be unique of kibana
  upgrade:
    version: "kibana-7.9.3"

  # Kibana deployment specifications
  deployment:
    replicas: 1
    resources:
      request:
        memory: "200Mi"
        cpu: "100m"
      limit:
        memory: "1Gi"
        cpu: "800m"
  # rbacEnabled, serviceAccountName configuration for pod-kibana: These configuration is used to create the rolebinding and serviceaccount.
  # Configuring rbacEnabled to true will create clusterrole, clusterrolebinding. Configuring rbacEnabled to false, clusterrole, clusterrolebinding will not be created.
  rbacEnabled: true
  # serviceAccountName configuration is used to create serviceaccount per pod.
  serviceAccountName: "kibana-serviceaccount"
