global:
  # PaaS Registry Selector
  registry:
    docker:
      repoPath: "a4oprodaf.a4opacketcore.microsoft.com/rel_build_docker"
      #Create a docker-registry secret in the same namespace as the chart and provide the name here
      imagePullSecret: ""
  # Prometheus metrics scrape intrval. Default value set to 1m.
  metricsScrapeInterval: 1m  

  # Environment variables
  envVars:
    fedType: "paas"       # To be overridden by fed-level values.yaml
    fedUniqueName: "{deployParameters.redis-operator-unique-name}"
  
  monitoring:
    prometheus:
      enabled: true

  grafana:
    enabled: true
    # If Grafana is enabled, please add a valid Grafana server URL as per the following guidelines.
    # If Grafana is deployed WITHOUT TLS: "http://[grafana-ip]:[grafana-port]" OR "http://[paas-lb-ip]:[grafana-port]" (by-default grafana-port is 3000)
    # If Grafana is deployed WITH TLS: "https://[grafana-ip]:[grafana-port]" OR "https://[paas-lb-ip]:[grafana-port]" (by-default grafana-port is 3000)
    url: "{deployParameters.grafana-url}"
    prometheusinfo:
      url: "http://prometheus.fed-prometheus:9090"

  logging:
    enabled: false
    fluentd:
      buffer:
        bufferLimit: 512m  # Total buffer size. Maximum amount of buffer space each fluentd thread would use to keep logs. After this is exhaused, fluentd would start deleting oldest logs to make room for new logs.
        retryWait: 180s    # Interval(seconds) at which the buffer flush is retried in case of failure.
        maxRetries: 10     # Max number of retries to flush a buffer chunk. After this is exhausted, fluentd would delete the chunk.
    elastic:
      IP: "{deployParameters.elasticsearch-host}"
      Port: 9200
    enableAddlTargets: false
    addlTargets:
    - forward:
        name: fluentd
        host: ""
        port: 24224
    alerts:
      enabled: false
      host: ""
      port: 3030
      realert:
        minutes: 1

      # Multiple receivers can be configured under the below receivers section. For example: if another slack receiver is to be configured,
      # then add another list item for slack by following the syntax as shown below. Currently 3 types of receivers are supported i.e slack, email and HTTP POST.

      receivers:
      - email:
         to_address: ""
         smtp_host: ""
         smtp_port: ""
         smtp_ssl: false
         from_addr: ""
 
  defaultRbacEnabled: true
  podPriorityEnabled: true
  # Definition of pod topology spread constraints to uniformly spread all the pods across all the K8s worker nodes.
  topologySpreadConstraints:
    enabled: true
    constraints:
    - maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway


pod-redis_operator:
  rbacEnabled: true
  replicaCount: 3
  imagePullPolicy: "IfNotPresent"
  logLevel: 6
  args: [
  "--logtostderr=true",
  "--alsologtostderr"
  ]
  prometheus:
    enabled: true
  resources:
    limits:
      cpu: "200m"
      memory: "256Mi"
    requests:
      cpu: "100m"
      memory: "100Mi"
   
  livenessProbe:
    initialDelaySeconds: 30

  readinessProbe:
    initialDelaySeconds: 5

  zoneAwareReplication: true

  printRedisClusterInfo:
    enabled: true
    intervalMin: 1
