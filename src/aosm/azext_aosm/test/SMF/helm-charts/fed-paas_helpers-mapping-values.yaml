global:

  #If vault is enabled or not
  vault:
    enabled: false
    hashicorpVault:
      enabled: false
      service: "http://fed-vault-svc-internal.fed-vault:8200" # DevSkim: ignore DS137138
    azureKeyVault:
      enabled: false
      tenantID: ""
      keyVaultName: ""
      aksCluster: false

  #Generic password for all PAAS components
  adminPassword: "{deployParameters.admin-password}"

  #RBAC dafault configuration per namespace: These configuration is used to create the clusterrolebinding and serviceaccount
  #Configuring defaultRbacEnabled to true will create clusterrolebinding. Configuring defaultRbacEnabled to false, clusterrolebinding will not be created. 
  #defaultClusterRole configuration is to configure the clusterrole in clusterrolebinding.
  defaultRbacEnabled: true
  defaultClusterRole: permissive-network-cr
  #serviceaccount will be created by default. #defaultServiceAccountName configuration is used to create default serviceaccount per namespace.
  defaultServiceAccountName: fed-paas-helpers-serviceaccount

  #Enable/disable pod priority and preemption
  podPriorityEnabled: true
  
  # NetworkPolicy Configuration
  ingressNetworkPolicy:
    # enabled: true -> enables networkpolicy in federation, false -> disables networkpolicy in federation
    enabled: true
    # Namespaces which are required to be allowed for ingress traffic
    ingressTrafficNamespaces:
    - fed-service-reg
    - fed-db-etcd
    - fed-db-mongo-ram
    - fed-istio
    - fed-metallb
    - fed-prometheus
    - fed-amf-mme
    - fed-smf
    - fed-upf
    - fed-nrf
    - fed-nssf
    - fed-n3iwf
    - fed-agf


  # If running on OCP cluster, please set "enableSCC" to "true"
  enableSCC: false

  # Set this flag to enable the user to provide custom SCC for use in RBAC
  enableUserProvidedSCC: false

  # Flag to control actions in case OPA injection is disabled
  opaInjectDisabled: false

  logging:
    enabled: false
    fluentd:
      buffer:
        bufferLimit: 128m  # Total buffer size. Maximum amount of buffer space each fluentd thread would use to keep logs. After this is exhaused, fluentd would start deleting oldest logs to make room for new logs.
        retryWait: 10s    # Interval(seconds) at which the buffer flush is retried in case of failure.
        maxRetries: 5     # Max number of retries to flush a buffer chunk. After this is exhausted, fluentd would delete the chunk.
    elastic:
      IP: "{deployParameters.elasticsearch-host}"
      Port: 9200
    enableAddlTargets: false
    addlTargets:
    - forward:
        name: fluentd
        host: ""
        port: 24224
    alerts:
      enabled: false
      host: ""
      port: 3030
      realert:
        minutes: 1

      # Multiple receivers can be configured under the below receivers section. For example: if another slack reciever is to be configured,
      # then add another list item for slack by following the syntax as shown below. Currently 3 types of receivers are supported i.e slack, email and HTTP POST.

      receivers:
        - slack:
            webhookurl: ""
        - post:
            http_post_url: ""
        - email:
            to_address: ""
            smtp_host: ""
            smtp_port: ""
            smtp_ssl: false
            from_addr: ""
      
  grafana:
    enabled: true
    # If Grafana is enabled, please add a valid Grafana server URL as per the following guidelines.
    # If Grafana is deployed WITHOUT TLS: "http://[grafana-ip]:[grafana-port]" OR "http://[paas-lb-ip]:[grafana-port]" (by-default grafana-port is 3000)
    # If Grafana is deployed WITH TLS: "https://[grafana-ip]:[grafana-port]" OR "https://[paas-lb-ip]:[grafana-port]" (by-default grafana-port is 3000)
    url: "{deployParameters.grafana-url}"
    prometheusinfo:
      url: "http://prometheus.fed-prometheus:9090" # DevSkim: ignore DS137138

  # PaaS Monitoring Selector 
  monitoring:
    prometheus:
      enabled: true

  # PaaS Fileserver Selector
  # fileserver.nfs not required for rook-ceph deployment
  fileserver:
    nfs:
      remoteHost: "{deployParameters.nfs-server}"
      remotePath: "{deployParameters.nfs-filepath}"
      remotePort: "85"

  # Prometheus metrics scrape intrval. Default value set to 1m.
  metricsScrapeInterval: 1m

  # PaaS Registry Selector
  registry:
    docker:
      repoPath: "a4oprodaf.a4opacketcore.microsoft.com/rel_build_docker"

  # Environment variables 
  envVars:
    fedType:                  "paas"
    fedUniqueName:            "{deployParameters.paas-helpers-unique-name}"

  #specify the IP ranges that are allowed to access the load balancer
  loadBalancerSourceRanges: ""

  overrides:
    postInstallEnabled: false

  # node affinity deployment
  deployment:
    nodeDataplaneAffinity: "false"

  kargo:
    enabled: true

name: paas-monitor
pod-grafana_operator:
  enabled: true
  deployment:
    authToProm:
      oAuth:
        enabled: false

  livenessProbe:
    initialDelaySeconds: 20
    periodSeconds: 30
    timeoutSeconds: 30
    successThreshold: 1
    failureThreshold: 10

##### Trace Exporter Related configurations ######
pod-trace_exporter:
  enabled: true
  ## Resource limits
  resources:
    limits:
      cpu: "2"
      memory: 4Gi
    requests:
      cpu: 100m
      memory: 200Mi

  forwardServer:
    host: ""
    port: ""
  
  cleaner:
    enabled: true
    retentionTime: "1h"
  
  #rbacEnabled,clusterRole,serviceAccountName configuration for pod-trace-exporter: These configuration is used to create the rolebinding and serviceaccount.
  #Configuring rbacEnabled to true will create rolebinding. Configuring rbacEnabled to false, rolebinding will not be created. 
  #clusterRole configuration is used to configure the clusterrole in rolebinding.
  rbacEnabled: true
  clusterRole: permissive-full-cr
  #serviceAccountName configuration is used to create serviceaccount per pod.
  serviceAccountName: trace-exporter-serviceaccount

  elasticconfig:
    elasticurl: ""

##### Fluentd Related configurations ######
pod-fluentd_operator:
  enabled: true
  name: fluentd
  nameOverride: operator
  #Control verbosity of log level for reloader container
  logLevel: warn
  #Control verbosity of log level for fluentd container. Possible values are fatal, error, warn or warning, info, debug, and trace.
  fluentdLogLevel: error
  prometheusEnabled: true
  syslogEnabled: false
  auditlogEnabled: false
  lilogsEnabled: false
  k8sEventLoggingEnabled: false
  fluentd:
    enabled: true
    multiWorkerEnabled: true
    numberOfWorkers: 10
    # Default elastic shard and replica configuration for fluentd created indices.
    # This configuration applies to every elasticsearch index fluentd creates.
    # Shards:  Buckets which Elasticsearch maintains per index. Default values is 5
    #          More shards are better for greater distribution, faster indexing and searching data, but with some maintenance overhead.
    # Replica: Duplicate index/data/shard maintained by Elasticsearch for HA and redundancy.
    #          A values of 1 means, ES would maintain 1 duplicate copy of the data in a different node (need to have sufficient data nodes).
    #          This comes with the storage tradeoff as double storage is needed to maintain the duplicate copy.
    #          The storage size of the data nodes in fed-elastic values file must be changed accordingly, if this value is changed.
    elastic:
      shards: 3
      replicas: 0
    resources: 
      limits:
        cpu: "4"
        memory: "6Gi"
      requests:
        cpu: "10m"
        memory: "10Mi"

  livenessProbe:
    failureThreshold: 5
    initialDelaySeconds: 120
    periodSeconds: 60
    successThreshold: 1
    timeoutSeconds: 10
    
  # rbacEnabled, serviceAccountName configuration for pod-fluentd-operator: This configuration is used to create the rolebinding and serviceaccount.
  # Configuring rbacEnabled to true will create clusterrole, role, clusterrolebinding, rolebinding. Configuring rbacEnabled to false, clusterrole, role, clusterrolebinding, rolebinding will not be created.
  rbacEnabled: true
  # serviceAccountName configuration is used to create serviceaccount per pod.
  serviceAccountName: "fluentd-operator-serviceaccount"

#Kubernetes event exporter
pod-k8s_event_logger:
  #enable to deploy Kubernetes event exporter. To visualise kubernetes event logs, Set logging.elastic.IP
  enabled: true

##### pod-jaeger related configuration #####
pod-jaeger_agent:
  # rbacEnabled, serviceAccountName configuration for pod-jaeger_agent: This configuration is used to create custom clusterolebinding and serviceaccount.
  # Configuring rbacEnabled to true will create custom clusterrole, clusterrolebinding. Configuring rbacEnabled to false, clusterrole, clusterrolebinding will not be created.
  rbacEnabled: true
  # serviceAccountName configuration is used to create serviceaccount per pod.
  serviceAccountName: "jaeger-agent-sa"

  readinessProbe:
    failureThreshold: 10
    initialDelaySeconds: 10
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 30
  livenessProbe:
    failureThreshold: 10
    initialDelaySeconds: 10
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 30

  agent:
    enabled: true
    log:
      level: info
    collector:
      host: "{deployParameters.jaeger-agt-col-host}"
      port: 14250
    resources:
      requests:
        cpu: 200m
        memory: 500Mi

pod-cert_manager:
  enabled: true
  #IssuerTypes
  issuerTypes:
    ca:
      enabled: true
      issuerName: affirmed-clusterissuer
      crlDistributionPoints: ""
      # Provide CA cert and key 
      userProvided:
        enabled: true
        rootCa:
          tlscrt: "{deployParameters.tlscrt}"
          tlskey: "{deployParameters.tlskey}"
      userProvidedVault:
        enabled: false
        rootCa:
          tlscrtSecretName: 
          tlskeySecretName: 
  # rbacEnabled true will create the upstream rbac 
  rbacEnabled: true
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: cert-manager-sa

pod-cert_ctrl:
  debug:
    enabled: false
  #User provided CA Bundle
  userProvidedCaBundle:
    enabled: false
    cacert: |-
        -----BEGIN CERTIFICATE-----
        MIIEJTCCAw2gAwIBAgIJAO9TIRZ1sH4cMA0GCSqGSIb3DQEBCwUAMIGoMQswCQYD
        VQQGEwJVUzELMAkGA1UECAwCTUExDjAMBgNVBAcMBUFjdG9uMRowGAYDVQQKDBFB
        ZmZpcm1lZCBOZXR3b3JrczEMMAoGA1UECwwDQ05JMR0wGwYDVQQDDBRhZmZpcm1l
        ZG5ldHdvcmtzLmNvbTEzMDEGCSqGSIb3DQEJARYkbml0aXNoX21hbGhvdHJhQGFm
        ZmlybWVkbmV0d29ya3MuY29tMB4XDTE5MDgxMzE4MDA1NFoXDTI5MDgxMDE4MDA1
        NFowgagxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJNQTEOMAwGA1UEBwwFQWN0b24x
        GjAYBgNVBAoMEUFmZmlybWVkIE5ldHdvcmtzMQwwCgYDVQQLDANDTkkxHTAbBgNV
        BAMMFGFmZmlybWVkbmV0d29ya3MuY29tMTMwMQYJKoZIhvcNAQkBFiRuaXRpc2hf
        bWFsaG90cmFAYWZmaXJtZWRuZXR3b3Jrcy5jb20wggEiMA0GCSqGSIb3DQEBAQUA
        A4IBDwAwggEKAoIBAQC0jPrr8XfUGpRepRsUQ77qIBxyq6OMU+SbydoHHdibXN/G
        K6QkS7iJkywLPuDwEFlvqPtChc3RQ2wj92loEvKuKTbx7aUyVXmneznij2S8Hc0M
        m++8p95KzIiSbol3cIUiGe7oEZ03FTi1nKgjT8AGbciUFst1V5Vw4U3bn7Wa1WQP
        tlGTmHDbQKXi3VG8mVAVomDvem0z+XskmGDHNWADadnmeiWnYdZyJfc2olxxigns
        nMuQ6G++yjUiTGn+4uSB6TGMfc9k+iggoI6igUTF2HPM9WKAbbPGEOx/SnLNg5HN
        fjLbo26k/MXNEsCnlgF5A7wTwCzZMigZfpYE2/aNAgMBAAGjUDBOMB0GA1UdDgQW
        BBSSXOItD3vsKQ2HMO0CKAsocaAlHDAfBgNVHSMEGDAWgBSSXOItD3vsKQ2HMO0C
        KAsocaAlHDAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBCwUAA4IBAQCh/t+n2c72
        S2qwzEn/0WtKdbDEOi0AAEiLqfshCPxlYgdGjqja9ZbQ/TR/EUZOoEVQWbr0d/Sz
        GtgqINequkyX82vVyRqoiHlqDtFKJwf3Z0qHPGmvh/zGDwctBu4GphbiJXEl83xh
        wdSUZKDn+/pP4sw6vxyqTU1+mBcDDgCoCaJSdLFo9AsJk/QRHjAPUiG25UKWCkML
        jEbIYFOejSo+GOZ/edB+X8Ua8PsKmFI1rUUrpE/rH4QRbRJww4xiL0zlkSYMM+G2
        4xD38RH+6xl6kLC7R/1if8VNFGqgeGp6lgQg/hW3q9ncbwILLyvxoKKUK1Njr2co
        mbm/D0rrJJCd
        -----END CERTIFICATE-----

pod-istio_config:
  # rbac enabled

  rbacEnabled: true
  # serviceAccountName
  serviceAccountName: istio-config-controller-sa
  
pod-capture_mgr:
  enabled: true
  
  # rbac enabled
  rbacEnabled: true

  # serviceAccountName
  serviceAccountName: "capture-mgr-sa"

pod-capture_ss:
  enabled: true

##### pod-kargo related configuration #####
pod-kargo:

  #rbacEnabled,clusterRole,serviceAccountName configuration for pod-kargo: These configuration is used to create the rolebinding and serviceaccount.
  #Configuring rbacEnabled to true will create rolebinding. Configuring rbacEnabled to false, rolebinding will not be created. 
  #clusterRole configuration is used to configure the clusterrole in rolebinding.
  rbacEnabled: true
  clusterRole: permissive-full-cr
  #serviceAccountName configuration is used to create serviceaccount per pod.
  serviceAccountName: kargo-serviceaccount

  ## Service related configurations
  service:
    port: 5555
    loadBalancerIP: "{deployParameters.kargo-lb-ip}"
    loadBalancerFQDN: ""
    loadBalancerSharingKey: "paas"
    serviceAnnotations:
      service.beta.kubernetes.io/azure-load-balancer-internal: "true"
      service.beta.kubernetes.io/azure-load-balancer-internal-subnet: "{deployParameters.oam-lb-subnet}"

  ## Log level
  logLevel: "info"

  ## Job File Cleaner Config
  cleaner:
    enabled: true
    retentionSizeGB: 40
    retentionTime: "3h"

  ## Resource limits
  resources:
    limits:
      cpu: "2"
      memory: 8Gi
    requests:
      cpu: 100m
      memory: 100Mi  

  ## Storage for kargo-pod
  storage:
    # storage type can be emptyDir, nfs, remote or rook
    type: emptyDir
    #if storage.type is set as rook, Configure storage.storageClassName field with the storage class name of type filesstem that gets deployed with fed-rook-ceph.
    storageClassName: kargo-vol
    # StorageSize is storage limit
    storageSize: "45Gi"
    #configure provisioner, reclaimPolicy, volumeBindingMode and parameters only when storage.type is remote.
    provisioner: kubernetes.io/azure-file
    reclaimPolicy: Delete
    parameters:
      customParameters:
        skuName: ""
        location: ""
        storageAccount: ""

  readinessProbe:
    failureThreshold: 5
    initialDelaySeconds: 20
    periodSeconds: 60
    successThreshold: 1
    timeoutSeconds: 10

  livenessProbe:
    failureThreshold: 5
    initialDelaySeconds: 30
    periodSeconds: 60
    successThreshold: 1
    timeoutSeconds: 10

pod-elastalert_cfg:
  deployment:
    #replicas: default value is 1, please configure to 3 or more for HA Mode (recommended 3 replicas)
    replicas: 1
  livenessProbe:
    initialDelaySeconds: 20
    periodSeconds: 30
    timeoutSeconds: 30
    successThreshold: 1
    failureThreshold: 10

pod-cores_mgr:
  enabled: true
  kargoHTTPReqTimeout: 30 # Should not be set as 0 

  # rbac enabled
  rbacEnabled: true

  # serviceAccountName
  serviceAccountName: "cores-mgr-sa"

  # The amount of time in seconds a given core file
  # need to be preserved on the persistent storage
  # Retention period of 0 seconds means that this
  # configuration is not applicable for core files management
  retentionPeriod: 0
  # The maximum disk size in bytes which is allowed to be
  # consumed by the cores files on the persistent
  # storage. Retention size of -1 indicates that unlimited
  # disk space is allowed to be consumed by the core files.
  retentionSize: -1
  # This policy indicates whether the oldest or newest core
  # files need to be deleted when the retention size is
  # exceeded by the preserved core files on the persistent storage
  retentionPolicy: "OLDEST"

  # Configuration related to cores storage
  coresStorage:
    type: nfs
    storageClassName: "cores-mgr-storage"
    requestStorage: "5Gi"
    nfs:
      capacityStorage: "5Gi"
      coresPath: "{deployParameters.nfs-filepath}"
      remoteHost: "{deployParameters.nfs-server}"
