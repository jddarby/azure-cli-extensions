global:

  defaultRbacEnabled: true
  defaultClusterRole: permissive-network-cr
  defaultServiceAccountName: fed-grafana-serviceaccount
  podPriorityEnabled: true

  # If running on OCP cluster, please set "enableSCC" to "true"
  enableSCC: false

  #If running on OCP cluster and SCC are given by the user, please set "enableUserProvidedSCC" to "true"
  enableUserProvidedSCC: false
  # This enables creation of specific kargo-default-profile for fed-grafana
  kargoProfileTag: "grafana"

  # NetworkPolicy Configuration
  ingressNetworkPolicy:
    # enabled: true -> enables networkpolicy in federation, false -> disables networkpolicy in federation
    enabled: true
    # Namespaces which are required to be allowed for ingress traffic
    ingressTrafficNamespaces:
    - fed-service-reg
    - fed-db-etcd
    - fed-paas-helpers
    - fed-istio
    - fed-prometheus

  vault:
    enabled: false
    hashicorpVault:
      enabled: true
      service: "http://fed-vault-svc-internal.fed-vault:8200"
    azureKeyVault:
      enabled: false
  # Fluentd Configurations
  logging:
    enabled: false
    fluentd:
      buffer:
        bufferLimit: 512m  # Total buffer size. Maximum amount of buffer space each fluentd thread would use to keep logs. After this is exhaused, fluentd would start deleting oldest logs to make room for new logs.
        retryWait: 180s    # Interval(seconds) at which the buffer flush is retried in case of failure.
        maxRetries: 10     # Max number of retries to flush a buffer chunk. After this is exhausted, fluentd would delete the chunk.

    elastic:
      IP: "{deployParameters.elasticsearch-host}"
      Port: 9200
    enableAddlTargets: false
    addlTargets:
    - forward:
        name: fluentd
        host: ""
        port: 24224

  grafana:
    enabled: true
    # If Grafana is enabled, please add a valid Grafana server URL as per the following guidelines.
    # If Grafana is deployed WITHOUT TLS: "http://[grafana-ip]:[grafana-port]" OR "http://[paas-lb-ip]:[grafana-port]" (by-default grafana-port is 3000)
    # If Grafana is deployed WITH TLS: "https://[grafana-ip]:[grafana-port]" OR "https://[paas-lb-ip]:[grafana-port]" (by-default grafana-port is 3000)
    url: "{deployParameters.grafana-url}"
    prometheusinfo:
      url: "http://prometheus.fed-prometheus:9090"

  #Generic password for all PaaS components
  adminPassword: ""
  monitoring:
    prometheus:
      enabled: true

  # PaaS Registry Selector
  registry:
    docker:
      repoPath: "a4oprodaf.a4opacketcore.microsoft.com/rel_build_docker"

  # Environment variables
  envVars:
    fedType:        "paas"
    fedUniqueName:  "grafana-default"

  # Prometheus metrics scrape intrval. Default value set to 1m.
  metricsScrapeInterval: 1m

  # PaaS Service Mesh Selector
  mesh:
    istio:
      # set this value only if load balancer sharing key is configured. Otherwise LB will auto assign LB IP from LB IP pool
      ingressGwIP: "{deployParameters.grafana-lb-ip}"
      ingressGwFQDN: "grafana.com"
      serviceAnnotations:
        service.beta.kubernetes.io/azure-load-balancer-internal: "true"
        service.beta.kubernetes.io/azure-load-balancer-internal-subnet: "{deployParameters.oam-lb-subnet}"

      # If specified this port will be used irresepective of TLS mode
      # If not specified, port 80 will be used if TLS is enabled, else port 443 will be used
      ingressGwPort: 3000
   
      # This controls use of TLS in GWs
      ingressGwTLS:
          enabled: false
          # Set the tls mode
            # SIMPLE --> to enable only TLS
            # MUTUAL --> to enable mTLS (default)
          mode: SIMPLE
          certManager: 
            enabled: true
            certDuration: 10h
            renewBefore: 1h
            organization: affirmednetworks
            issuerName: affirmed-clusterissuer
          userProvided: 
            enabled: false
            #please refer to userguide documentation
            cacert: |-

            tlscrt: |-

            tlskey: |- 
              
      # sharing key is for having single loadbalancer IP shared among multiple paas components.
      loadBalancerSharingKey: "paas"

  # you can specify the IP ranges that are allowed to access the load balancer
  loadBalancerSourceRanges: ""

  overrides:
    preDeleteEnabled:   false
    postInstallEnabled: false

pod-istio_gw:
  istioNspace: "fed-istio"
  istioRevision: "1-8-2"
  egressGateway:
    enabled: false

pod-grafana:
  debug: false #to enable debug-level logs
  enabled: true
  # rbacEnabled, serviceAccountName configuration for pod-pep: These configuration is used to create the rolebinding and serviceaccount.
  # Configuring rbacEnabled to true will create clusterrole, role, clusterrolebinding, rolebinding. Configuring rbacEnabled to false, clusterrole, role, clusterrolebinding, rolebinding will not be created.
  rbacEnabled: true
  # serviceAccountName configuration is used to create serviceaccount per pod.
  serviceAccountName: "grafana-serviceaccount"

  readinessProbe:
    failureThreshold: 10
    initialDelaySeconds: 60
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 30

  livenessProbe:
    failureThreshold: 10
    initialDelaySeconds: 60
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 30
